"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
exports.__esModule = true;
exports.run = exports.getBinary = void 0;
var binary_install_1 = require("binary-install");
var os_1 = __importDefault(require("os"));
var child_process_1 = require("child_process");
var NAME = 'xlsx-to-csv';
var VERSION = '1.0.1';
function getPlatform() {
    var type = os_1["default"].type();
    var arch = os_1["default"].arch();
    if (type === 'Windows_NT' && arch === 'x64')
        return 'win64';
    if (type === 'Windows_NT')
        return 'win32';
    if (type === 'Linux' && arch === 'x64')
        return 'linux';
    if (type === 'Darwin' && arch === 'x64')
        return 'macos-x86_64';
    if (type === 'Darwin' && arch === 'arm64')
        return 'aarch64';
    throw new Error("Unsupported platform: " + type + " " + arch);
}
function getBinary() {
    var platform = getPlatform();
    var url = "https://github.com/ianberdin/xlsx-to-csv/releases/download/v" + VERSION + "/" + NAME + "-" + platform + ".tar.gz";
    return new binary_install_1.Binary(NAME, url);
}
exports.getBinary = getBinary;
function run() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    var result = (0, child_process_1.spawnSync)(getBinary().binaryPath, args, {});
    if (result.error) {
        throw result.error;
    }
    return result;
}
exports.run = run;
exports["default"] = {
    getPlatform: getPlatform,
    getBinary: getBinary,
    run: run
};
